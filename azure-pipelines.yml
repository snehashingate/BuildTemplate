# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- uat

pool:
  vmImage: 'windows-latest'

variables:
  azureSubscription: 'CSP-Competency Dev-IMS App Ops-Mohammed khaja Pasha(1)(3dc3cd1a-d5cd-4e3e-a648-b2253048af83)'
  solution: '**/*.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  appType: 'webApp'
  deploymentMethod: 'auto'
  package: '$(System.DefaultWorkingDirectory)/**/*.zip'
  SonarQube: 'Sonar'
  scannerMode: 'MSBuild'
  projectKey: 'BuildTemplate_BuildTemplate_AYCOwWbt5hTFp9NdoVHg'
  projectName: 'sonar.projectName'

steps:

- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'Sonar'
    scannerMode: 'MSBuild'
    projectKey: 'BuildTemplate_BuildTemplate_AYCOwWbt5hTFp9NdoVHg'
    projectName: 'sonar.projectName'

#---Build
- template: ./templates/build_templates/buildTemplate.yml
  parameters:
    solutionName: '$(solution)'
    buildPlatform: '$(buildPlatform)'
    buildConfiguration: '$(buildConfiguration)'
    artifactStagingDirectory: '$(build.artifactStagingDirectory)'
    DefaultWorkingDirectory: '$(System.DefaultWorkingDirectory)'

- template: ./templates/deployment_templates/WebApp_template.yml
  parameters:
    azureSubscription: '$(azureSubscription)'
    appType: '$(appType)'
    appName: '$(appName)'
    package: '$(package)'
    deploymentMethod: '$(deploymentMethod)'

#- task: AzureWebApp@1
# inputs:
#    azureSubscription: 'CSP-Competency Dev-IMS App Ops-Mohammed khaja Pasha(1)(3dc3cd1a-d5cd-4e3e-a648-b2253048af83)'
#    appType: 'webApp'
#    appName: 'SampleWebappDeployment'
#    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
#    deploymentMethod: 'auto'
    
- task: SonarQubeAnalyze@5
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'