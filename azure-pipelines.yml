# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- uat

pool:
  vmImage: 'windows-latest'

variables:

  websiteName: 'WeatherService'
  appPoolName: 'WeatherService'
  #Build variables
  solution: '**/*.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  
  #Deploy variables
  azureSubscription: 'CSP-Competency Dev-IMS App Ops-Mohammed khaja Pasha(3dc3cd1a-d5cd-4e3e-a648-b2253048af83)'
  appName: 'SampleWebappDeployment'
  appType: 'webApp'
  deploymentMethod: 'auto'
  package: '$(System.DefaultWorkingDirectory)/**/*.zip'

  #SonarQube variables
  SonarQube: 'Sonar'
  scannerMode: 'MSBuild'
  projectKey: 'BuildTemplate_BuildTemplate_AYCOwWbt5hTFp9NdoVHg'
  projectName: 'sonar.projectName'
  pollingTimeoutSec: '300'

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs:
     - job: 
       steps:
      #---Build
        - template: ./templates/build_templates/buildTemplate.yml
          parameters:
            solutionName: '$(solution)'
            buildPlatform: '$(buildPlatform)'
            buildConfiguration: '$(buildConfiguration)'
            artifactStagingDirectory: '$(build.artifactStagingDirectory)'
            DefaultWorkingDirectory: '$(System.DefaultWorkingDirectory)'
- stage: 'Dev'
  displayName: 'Dev'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
   - deployment: Dev
     displayName: Dev
     environment: 
       name: 'Dev'    
       resourceType: VirtualMachine
     variables:
     - name: websitePhysicalPath
       value: '%SystemDrive%\inetpub\wwwroot\$(websiteName)'

     strategy:
      runOnce:
        deploy:
          steps: 
          - task: IISWebAppManagementOnMachineGroup@0
            inputs:            
              IISDeploymentType: 'IISWebsite'
              ActionIISWebsite: 'CreateOrUpdateWebsite'
              WebsiteName: '$(websiteName)'
              WebsitePhysicalPath: '$(websitePhysicalPath)'
              WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
              CreateOrUpdateAppPoolForWebsite: true
              AppPoolNameForWebsite: '$(appPoolName)'
              DotNetVersionForWebsite: 'No Managed Code'
              PipeLineModeForWebsite: 'Integrated'
              AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
              AddBinding: true
              Bindings: |
                  {
                      bindings:[
                          {
                              "protocol":"http",
                              "ipAddress":"",
                              "hostname":"",
                              "port":"80",
                              "sslThumbprint":"",
                              "sniFlag":false
                          }
                      ]
                  }
          - task: IISWebAppDeploymentOnMachineGroup@0
            inputs:
              WebSiteName: '$(websiteName)'
              Package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/$(projectName).zip'
# - task: SonarQubePrepare@5
#   inputs:
#     SonarQube: 'Sonar'
#     scannerMode: 'MSBuild'
#     projectKey: 'BuildTemplate_BuildTemplate_AYCOwWbt5hTFp9NdoVHg'
#     projectName: 'sonar.projectName'

#SonarQube
#Prepare Analysis Configuration
# - template: ./templates/SonarQube_templates/PrepareAnalysisConfiguration_template.yml
#   parameters:
#     SonarQube: '$(SonarQube)'
#     scannerMode: '$(scannerMode)'
#     projectKey: '$(projectKey)'
#     projectName: '$(projectName)'

# #---Build
# - template: ./templates/build_templates/buildTemplate.yml
#   parameters:
#     solutionName: '$(solution)'
#     buildPlatform: '$(buildPlatform)'
#     buildConfiguration: '$(buildConfiguration)'
#     artifactStagingDirectory: '$(build.artifactStagingDirectory)'
#     DefaultWorkingDirectory: '$(System.DefaultWorkingDirectory)'

# # Deploy on webApp service https://samplewebappdeployment.azurewebsites.net/
# - template: ./templates/deployment_templates/WebApp_template.yml
#   parameters:
#     azureSubscription: '$(azureSubscription)'
#     appType: '$(appType)'
#     appName: '$(appName)'
#     package: '$(package)'
#     deploymentMethod: '$(deploymentMethod)'

# - task: AzureWebApp@1
# inputs:
#    azureSubscription: 'CSP-Competency Dev-IMS App Ops-Mohammed khaja Pasha(1)(3dc3cd1a-d5cd-4e3e-a648-b2253048af83)'
#    appType: 'webApp'
#    appName: 'SampleWebappDeployment'
#    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
#    deploymentMethod: 'auto'
    
#SonarQube    
#Run Code Analysis
# - task: SonarQubeAnalyze@5

#SonarQube
#Publish Quality Gate Result
# - template: ./templates/SonarQube_templates/PublishQualityGateResult_template.yml
#   parameters:
#     pollingTimeoutSec: '$(pollingTimeoutSec)'
   
# - task: SonarQubePublish@5
#   inputs:
#     pollingTimeoutSec: '300'